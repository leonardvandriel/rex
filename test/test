#!/bin/bash

set -e

script_config=.test
script_bin=src/main
script_run="$script_bin --use $script_config"
script_path=".rex/$script_config"
script_temp="test/tmp"

_assert_eq() {
  if [[ "$1" != "$2" ]]; then echo "'$1' != '$2'"; exit 1; fi
}

test_run() {
  local text='echo some text'
  local result=$($script_run --run echo -n "$text")
  _assert_eq "$result" "$text"
}

test_push() {
  local file="$script_temp/push/file.txt"
  local text='cat a file'
  mkdir -p $script_temp/push
  echo -n $text > $file
  local result=$($script_run cat $file)
  _assert_eq "$result" "$text"
}

test_pull() {
  local file="$script_temp/pull/file.txt"
  local text='echo remotely and pull'
  local result=$($script_run mkdir -p $script_temp/pull '&&' echo -n $text \> $file)
  _assert_eq "$(cat $file)" "$text"
}

test_ignore_relative() {
  local dir=$script_temp/a/b
  _setup "" "" "relative"
  mkdir -p $dir
  echo -n "should be ignored" > $dir/relative
  local result=$($script_run test -f $dir/relative '&&' echo -n 'exists' '||' echo -n 'doesnt')
  _assert_eq "$result" "doesnt"
}

_setup() {
  cat .rex/test > $script_path
  echo "push=$1" >> $script_path
  echo "pull=$2" >> $script_path
  echo "ignore=/.*:$3" >> $script_path
  mkdir -p $script_temp
}

_cleanup() {
  rm -rf $script_temp/*
  $script_bin --run rm -rf $script_temp/*
}

_run() {
  _setup $script_temp/push $script_temp/pull $script_temp/ignore
  echo "testing $1.."
  test_$1 $1
  _cleanup
}

main() {
  _cleanup
  if [[ -n $1 ]]; then
    _run $1
  else
    local lines=$(declare -F)
    local funcs=${lines//declare -f /}
    for func in $funcs ; do
      if [[ $func = test_* ]]; then
        local name=${func//test_/}
        _run $name
      fi
    done
  fi
  rm -rf $1 $script_path
}

main $@
