#!/bin/bash

set -e

script_config=.test
script_bin=src/main
script_run="$script_bin --use $script_config"
script_path=".rex/$script_config"
script_temp="test/tmp"

_assert_equal() {
  if [[ "$1" != "$2" ]]; then echo "error: '$1' != '$2'"; exit 1; fi
}

_assert_match() {
  if [[ ! "$1" =~ $2 ]]; then echo "error: '$1' !~ '$2'"; exit 1; fi
}

_load() {
  local base=$1
  shift
  ls -1 $base | while read line; do
    if [[ "$line" != "test" && "$line" != "tmp" ]]; then
      local path="$base/$line"
      echo source $path
      source $path
    fi
  done
}

_setup() {
  cat .rex/test > $script_path
  echo "push=$1" >> $script_path
  echo "pull=$2" >> $script_path
  echo "ignore=/.*:$3" >> $script_path
  local cmd="mkdir -p $1 $2 $3 $4"
  eval $cmd
  $script_bin --run $cmd
}

_cleanup() {
  local cmd="rm -rf $script_temp/*"
  eval $cmd
  $script_bin --run $cmd
}

_run() {
  _setup $script_temp/push $script_temp/pull $script_temp/ignore $script_temp/sync
  echo "testing $1.."
  $1
  _cleanup
}

main() {
  _cleanup
  if [[ -n $1 ]]; then
    while [[ -n "$1" ]]; do
      _run "$1"
      shift
    done
  else
    local dir=$(dirname $0)
    local dirs=$(ls -1 $dir)
    for line in $dirs; do
      if [[ "$line" != "test" && "$line" != "tmp" ]]; then
        local path="$dir/$line"
        echo testing in $line:
        $path
      fi
    done    # local lines=$(declare -F)
  fi
  rm -rf $1 $script_path
}

main $@
